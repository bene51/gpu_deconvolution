CL_VERSION = 2010

.SUFFIXES: .cpp .obj .cu

NVCC = nvcc
INCL = --include-path "$(JAVA_HOME)/include" --include-path "$(JAVA_HOME)/include/win32"
RELEASE_NVCC_FLAGS = -gencode arch=compute_20,code=sm_20 \
                     -gencode arch=compute_30,code=sm_30 \
                     -gencode arch=compute_35,code=sm_35 \
                     -gencode arch=compute_35,code=compute_35
NVCC_COMPILE_FLAGS = -c -O2 -Xcompiler "/EHsc /W3 /nologo /O2 /Zi /MT" --cl-version $(CL_VERSION) --use-local-env 
!IF "$(RELEASE)" == "1"
NVCC_COMPILE_FLAGS = $(RELEASE_NVCC_FLAGS) $(NVCC_COMPILE_FLAGS)
!ENDIF
NVCC_LINK_FLAGS = --cl-version $(CL_VERSION) --use-local-env -lcufft
REDISTRIBUTABLE = NativeSPIMReconstructionCuda.dll NativeSPIMReconstructionCuda.exe

CPP_OBJS = fastspim_NativeSPIMReconstructionCuda.obj \
	   Transform.obj \
	   TransformJNI.obj \
	   IterationType.obj \
	   Deconvolve.obj \
	   DeconvolveFiles.obj \
	   DeconvolveInteractiveJNI.obj \
	   CudaUtils.obj \
	   Main.obj

CU_OBJS = TransformKernels.obj \
          DeconvolveKernels.obj

all: $(REDISTRIBUTABLE)

clean:
	del $(REDISTRIBUTABLE) $(CPP_OBJS) $(CU_OBJS)

.cpp.obj:
	@echo Building $@ from $<
	$(NVCC) $(NVCC_COMPILE_FLAGS) $(INCL) -o $@ $< >nul

.cu.obj:
	@echo Building $@ from $<
	$(NVCC) $(NVCC_COMPILE_FLAGS) $(INCL) -o $@ $< >nul

NativeSPIMReconstructionCuda.dll: $(CU_OBJS) $(CPP_OBJS)
	@echo linking...
	$(NVCC) $(NVCC_LINK_FLAGS) --shared -o $@ $** >nul

NativeSPIMReconstructionCuda.exe: $(CU_OBJS) $(CPP_OBJS)
	@echo linking...
	$(NVCC) $(NVCC_LINK_FLAGS) -o $@ $** >nul

